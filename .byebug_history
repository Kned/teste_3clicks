continue
user.addresses.count
user.addresses
user = User.create!(user_params)
continue
params.permit(addresses_attributes: [:street, :number, :complement])
params.permit(addresses_attributes: [:street, :number, :complement]).first
params.permit(addresses_attributes: [:street, :number, :complement]).first[:street]
params.permit(addresses_attributes: [:street, :number, :complement])[:street]
params.permit(addresses_attributes: [:street, :number, :complement]).count
params.permit(addresses_attributes: [:street, :number, :complement])
params.permit(addresses_attributes: [:street: [], :number: [], :complement: []])
params.permit(addresses_attributes: [street: [], number: [], complement: []])
params.permit(addresses_attributes: [street:[], :number, :complement])
params.permit(addresses_attributes: [:street, :number, :complement])
params.permit(addresses_attributes: [:street])
params.permit(addresses_attributes: [{:street}])
params.permit(addresses_attributes: [])
params.permit(addresses_attributes:[])
params.permit(:addresses_attributes)
params.permit(:addresses_attributes[])
params.permit(:addresses_attributes)
params[:addresses_attributes].first
params[:addresses_attributes].permit
params[:addresses_attributes].permit!
params[:addresses_attributes].allow
params[:addresses_attributes]
params.require(:addresses_attributes).to_h
params.require(:addresses_attributes).to_hash
params.require(:addresses_attributes).hash
params.require(:addresses_attributes).to_json
params.require(:addresses_attributes).flatten
params.require(:addresses_attributes)
params.require(:addresses_attributes).permit(:street)
params.require(:addresses_attributes)
params
